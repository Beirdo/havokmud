{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}{\f27\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Tahoma;}{\f28\froman\fcharset238\fprq2 Times New Roman CE;}{\f29\froman\fcharset204\fprq2 Times New Roman Cyr;}
{\f31\froman\fcharset161\fprq2 Times New Roman Greek;}{\f32\froman\fcharset162\fprq2 Times New Roman Tur;}{\f33\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f34\froman\fcharset178\fprq2 Times New Roman (Arabic);}
{\f35\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f44\fmodern\fcharset238\fprq1 Courier New CE;}{\f45\fmodern\fcharset204\fprq1 Courier New Cyr;}{\f47\fmodern\fcharset161\fprq1 Courier New Greek;}{\f48\fmodern\fcharset162\fprq1 Courier New Tur;}
{\f49\fmodern\fcharset177\fprq1 Courier New (Hebrew);}{\f50\fmodern\fcharset178\fprq1 Courier New (Arabic);}{\f51\fmodern\fcharset186\fprq1 Courier New Baltic;}{\f244\fswiss\fcharset238\fprq2 Tahoma CE;}{\f245\fswiss\fcharset204\fprq2 Tahoma Cyr;}
{\f247\fswiss\fcharset161\fprq2 Tahoma Greek;}{\f248\fswiss\fcharset162\fprq2 Tahoma Tur;}{\f249\fswiss\fcharset177\fprq2 Tahoma (Hebrew);}{\f250\fswiss\fcharset178\fprq2 Tahoma (Arabic);}{\f251\fswiss\fcharset186\fprq2 Tahoma Baltic;}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;
\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 
\fs24\lang4105\langfe1033\cgrid\langnp4105\langfenp1033 \snext0 Normal;}{\*\cs10 \additive Default Paragraph Font;}}{\*\listtable{\list\listtemplateid-1508348516\listsimple{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat0
\levelspace0\levelindent0{\leveltext\'01*;}{\levelnumbers;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 }{\listname ;}\listid-2}}{\*\listoverridetable{\listoverride\listid-2\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc23
\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 }}\ls1}}{\info{\title A starter's manual to building}
{\author Greg Hovey}{\operator Greg Hovey}{\creatim\yr2003\mo8\dy20\min9}{\revtim\yr2003\mo8\dy20\min9}{\version2}{\edmins1}{\nofpages1}{\nofwords4614}{\nofchars26305}{\*\company HavokInc}{\nofcharsws32304}{\vern8247}}
\widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\horzdoc\dghspace120\dgvspace120\dghorigin1701\dgvorigin1984\dghshow0\dgvshow3\jcompress\viewkind4\viewscale100\nolnhtadjtbl \fet0\sectd \linex0\sectdefaultcl 
{\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5
\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang
{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \fs24\lang4105\langfe1033\cgrid\langnp4105\langfenp1033 {\b\f27\ul\lang1033\langfe1033\langnp1033 
A starter's manual to building
\par }{\b\f27\lang1033\langfe1033\langnp1033 
\par }{\f27\fs18\lang1033\langfe1033\langnp1033 Courtesy of Ashamael, redone by Lennya
\par 
\par }\pard \qc \li0\ri0\keepn\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f27\fs18\ul\lang1033\langfe1033\langnp1033 BASIC IDEA
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f27\fs18\lang1033\langfe1033\langnp1033 Basic idea is this - get a zone created for you by an immortal with access to the server.  Once this is done, it will appear in
 the show zones list.  Have a level 59+ immortal give you access to the zone (For the rusty imps: @zone yournamehere yourzonenumberhere) so you will be allowed to build there.  Once this is done, you will have a range of room numbers within which you can 
b
uild.  The room numbers will not only be the numbers for your rooms, but also for your items and your mobs.  Yes, you can have a room # 43008, a mob # 43008, and an object # 43008, but only one of each type (though if you make a mob and save it as mob # 4
3008, you can have a bunch of those mobs running about, of course!).
\par These numbers are called VNUMs.
\par Let me start with the show command:
\par SHOW\tab \tab 
\par \tab \tab show zones
\par \tab In order of zone number, this shows a list of zones, their lifespan (how long until they reset), \tab their current age (999 if deinited), if and when they will deinit, and if and when they will reset \tab (=repop, respawn).
\par \tab \tab show <obj|mob|max> <zone#>
\par \tab List all objects, mobiles, or items with load rates in the zone with the number supplied.
\par \tab \tab show rooms <zone#|death|private>
\par \tab List all rooms in a zone, or all deathtrap or private rooms in the world.
\par \tab \tab show report (zone#)
\par \tab This option is restricted to level 56+, and creates a list of items in the zone, along with their
\par \tab various item values.
\par 
\par Now, I would like to point out the problem with these vnums where they concern mobiles and items. Room vnums have no problems afaik.
\par Object VNUM problem:
\par If you get a fresh zone assigned, with no objects, mobiles or rooms, then try typing
\par \tab show o <yourzonenumberhere>
\par It will 
give you an empty list, because you just started. Now, the problem is, you can save and load items to and from an existent VNUM. However, when you start from scratch, your VNUMS haven't been created yet. This means you can save them away, but not load the
m, or oversave them until there has been a reboot. So. You can save an opject to a previously non-existent VNUM, but not yet load it, as this is likely to crash the mud, and leave you with a corrupted (=crashy) item too. More on this further on.
\par Mobile VNUM problem:
\par This one is rather similar to the object VNUM problem. You can save a mobile to a non-existent VNUM, but not load it until there's been a reboot. However, you can oversave it without crashing the mud, if you choose to do so. Trying to load the mo
b will only tell you There's no such monster. More later on.
\par 
\par Some side notes: Level 57 builders can edit any zone, not just the one that's assigned to them. Be careful to not accidentally save an item with a typo in the VNUM, because it may overwrite some
thing in someone else's zone. And there's no turning back then!
\par 
\par 
\par A few of the commands quick:
\par 
\par }{\b\f27\fs18\lang1033\langfe1033\langnp1033 REDIT}{\f27\fs18\lang1033\langfe1033\langnp1033 \tab editor for rooms\tab \tab redit\tab (will edit room you're currently occupying)
\par }{\b\f27\fs18\lang1033\langfe1033\langnp1033 MEDIT}{\f27\fs18\lang1033\langfe1033\langnp1033 \tab editor for mobs\tab \tab medit <name of mobile in room>
\par }{\b\f27\fs18\lang1033\langfe1033\langnp1033 OEDIT}{\f27\fs18\lang1033\langfe1033\langnp1033 \tab editor for objects\tab \tab oedit <name of object in room or inventory>
\par }{\b\f27\fs18\lang1033\langfe1033\langnp1033 STAT}{\f27\fs18\lang1033\langfe1033\langnp1033 \tab kinda like an immortal ID\tab stat <room/mob name/object name>
\par \tab Be wary of this command, because it seaches the world for objects, not just your room. So \tab typing 'stat guard' may leave you with a stat of a different guard than the one you wanted to \tab see. Be specific: 'stat guard-ellirude'.
\par 
\par These three commands contain most of the usual stuff that needs doing. Not all however, but there's other commands for the more specific stuff.
\par 
\par 
\par }{\b\f27\fs20\lang1033\langfe1033\langnp1033 CREATING ROOMS
\par }{\b\f27\fs18\lang1033\langfe1033\langnp1033 CREATE\tab \tab Create <start> <end>
\par }{\f27\fs18\lang1033\langfe1033\langnp1033 
Creates rooms ranging from START to END. Useful for person using redit since it does NOT make rooms. Create about 20 rooms, edit them, save them and your ready for 20 more! (Not a command I relish using, I prefer WIZSET FAST, see later on   -Lennya)

\par }\pard \ql \li0\ri0\keepn\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f27\fs18\lang1033\langfe1033\langnp1033 
\par }{\f27\fs18\lang1033\langfe1033\langnp1033 
Editiing rooms is probably best learned through the use of REDIT. You can set most things in there. But for doors. You can't set those in any satisfactory way, because there's no way to give the door a name, leaving you with "The  seems to be clo
sed". Useless rubbish. For editing doors and exits from a room, use the edit command:}{\b\f27\fs18\lang1033\langfe1033\langnp1033 
\par EDIT\tab \tab edit <field> <attributes>
\par }{\f27\fs18\lang1033\langfe1033\langnp1033 This command can set most every room field. It is more extensive than redit, but not as easy \tab to use. The room you are currently in is the
 one that is edited.  Use rsave and rload to save changes into a file and reload them later into the game (if it crashes, for example).
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f27\fs18\lang1033\langfe1033\langnp1033 
\par field:
\par  \tab name\tab :  changes the name of the room.
\par \tab desc\tab :  changes the room description.
\par \tab exit\tab :  adds, deletes or modifies a room's exits
\par \tab fs\tab :  changes the Flags, and Sector type.
\par \tab exdsc\tab :  adds, changes or deletes an exit description
\par \tab extra\tab :  adds an extra description to a room.
\par \tab riv\tab :  adds special parameters for rivers.
\par \tab tele\tab :  makes the room a teleport room.
\par \tab tunn\tab :  makes the room a tunnel room.
\par attributes:
\par \tab name  <name of room>
\par \tab desc  <enter>  (it will prompt you for text)
\par \tab exit  <dir> <door flags> <key> <to_room> [optional: <open command>]
\par \tab fs   <startroom> <endroom> <room flags> <sector type>
\par \tab exdsc <dir> <enter>  (prompts you for text)
\par \tab extra <keywords> <enter>  (prompts you for text)
\par \tab riv   <speed> <dir>
\par \tab tele  <time> <to_room> <look-flag>
\par \tab tunn  <mob_lim>
\par  \tab 
\par }{\f27\fs20\lang1033\langfe1033\langnp1033 dir\tab \tab Direction of the exit\tab 0 = n,  1 = e,  2 = s,  3 = w,  4 = u,  5= d
\par }{\f27\fs18\lang1033\langfe1033\langnp1033 door flags\tab S - secret flag, the exit is not visible unless you look in <dir>
\par }\pard \ql \fi720\li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f27\fs18\lang1033\langfe1033\langnp1033 \tab C - climb, needs fly or climb to leave in <dir> Also, prevents from spotting and luring! real useful for an ugly group of mobs.
\par \tab D - exit is a door, will prompt you for keyword for door, ~ on same line.
\par \tab P - pickproof, cannot be knocked, doorbashed or picked. Only works for doors
\par \tab 1 = door
\par \tab 2 = door and pickproof
\par \tab 3 = climb
\par \tab 4 = climb and door
\par \tab 5 = climb and door and pickproof
\par \tab Example: edit exit 0 2s 23 1000\tab a secret, unpickable door to the north into room 1000 will be created. Key to unlock has VNUM 23.
\par \tab To delete an exit: edit exit <dir> 0 0
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f27\fs18\lang1033\langfe1033\langnp1033 key\tab \tab item # that opens door, (if no door, use 0). If no key, use 0 too.
\par to_room\tab \tab The room# that the exit goes to.
\par open command\tab Command to open this exit
\par \tab \tab If none, then it uses open/close. Otherwise:
\par \tab \tab 224\tab pull
\par \tab \tab 371\tab twist
\par \tab \tab 372\tab turn
\par \tab \tab 373\tab lift
\par \tab \tab 374\tab push
\par \tab \tab Don't use "edit exit 1 d 0 1000 twist", as this will create an exit that can't be \tab opened.
\par \tab \tab Example: edit exit 1 d 0 1000 371
\par \tab \tab An exit in the eastern direction, a door, no lock on it, to room 1000, twist to open and close. Easy.
\par flags\tab \tab "edit fs" for more info. Also, see ROOMFLAGS below. When it concerns a single room, I find these easier to set in REDIT.\tab \tab \tab 
\par sector_type\tab Type "wizhelp sector type". Again, I prefer using REDIT for single rooms.
\par time\tab \tab The time interval between teleports.  Must be a multiple of 10.  10 is very fast.  60 is much slower. Whatever the number, time is dodgy at best.
\par look-flag\tab \tab Do a look when the characters are teleported.
\par \tab \tab 0 - they won't know they've been teleported unless they look on their own.
\par \tab \tab 1 - When they are teleported, they are forced to look.
\par keywords \tab Trigger name.  If keyword is CASE then if you type LOOK CASE, the text will be displayed. You can use multiple keywords too: 'edit extra case cases'
\par speed\tab \tab Must be a multiple of 15.
\par \tab \tab If you do not want the river to flow speed should be 0.
\par mob_lim\tab \tab A number, indicating the number of mobiles that can be in the room at one time.  The TUNNEL roomflag must be set, although use of }{\b\f27\fs18\lang1033\langfe1033\langnp1033 edit tunn X}{\f27\fs18\lang1033\langfe1033\langnp1033 
  automatically sets the flag.
\par \tab \tab Bear in mind that players and monsters are both considered mobiles. 'edit tunn 0' makes a room that cannot be entered.
\par }\pard \ql \fi720\li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f27\fs18\lang1033\langfe1033\langnp1033 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f27\fs18\lang1033\langfe1033\langnp1033 Room flags (also see 'edit fs'):
\par DARK\tab \tab 1\tab Needs a light or true sight to see in here.
\par DEATH\tab \tab 2\tab Death trap room. Use sparingly.
\par NO_MOB\tab 4\tab Mobs will not enter this room unless provoked.
\par INDOORS\tab 8\tab Room is indoors, disabling some druid and ranger spells.
\par PEACEFUL\tab 16\tab Hey now, none of that here!
\par NOSTEAL\tab 32\tab No Thieving, not implemented at time of writing this.
\par NO_SUM\tab 64\tab Makes this room !travel. No summon, portal or doorway spells here. Also prevents random teleporting into this room. Druids can still travel here with transport via plant.
\par NO_MAGIC\tab 128\tab No magic in here, mate.
\par TUNNEL\tab \tab 256\tab Small room, see above at mob_lim
\par PRIVATE\tab 512\tab No teleport to this room, no goto when more than 2 people. Kinda stupid I think, haven't found a valid use for this, just annoyance.
\par SILENCE\tab \tab 1024\tab No talking in here, mate.
\par LARGE\tab \tab 2048\tab Does nothing atm.
\par  NO_DEATH\tab 4096\tab Can't die in here. Autosets hps to 1, and forces flee.
\par SAVE_ROOM\tab 8092\tab Does nothing. Don't bother.
\par ARENA_ROOM\tab 16184\tab Player kill player here.
\par NO_FLY\tab \tab 32368\tab Nothing, nada. Who made all this junk?
\par REGEN_ROOM\tab 64736\tab Hitpoints, mana and moves regen faster for players when tick passes.
\par FIRE_ROOM\tab why\tab tick causes players some fire damage on tick
\par ICE_ROOM\tab do\tab cold damage
\par WIND_ROOM\tab I\tab pierce damage
\par EARTH_ROOM\tab bother\tab blunt damage
\par ELECTRIC_ROOM\tab \tab elec damage
\par WATER_ROOM\tab \tab nothing here yet.
\par MOVE_ROOM\tab \tab Bad for player's move on tick. Negative move regen.
\par MANA_ROOM\tab \tab Negative mana regen for players.
\par NO_FLEE\tab \tab Can't flee into or out of this room.
\par NO_SPY\tab \tab \tab Cannot spy into this room. Unless yer a cool imm like you and me, this goes without saying.
\par EVER_LIGHT\tab \tab Sets rooms to always lighted, no matter of nighttime, grotto etc. Good for newbie zones/rooms.
\par ROOM_MAP\tab \tab Sets the map scroll to the room. Shows ya the sector of a room or two ahead. Hard to explain. Easy to try out and see.
\par 
\par Guidelines concerning room descriptions:
\par {\pntext\pard\plain\f3\fs18 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-720\li720\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin720\itap0 {\f27\fs18\lang1033\langfe1033\langnp1033 
Do not use color strings in title or description, unless you got a very good reason.
\par {\pntext\pard\plain\f3\fs18 \loch\af3\dbch\af0\hich\f3 \'b7\tab}Start the room name with an upper case character.
\par {\pntext\pard\plain\f3\fs18 \loch\af3\dbch\af0\hich\f3 \'b7\tab}At the room description, honour the 3-space indent, The first line starts with three spaces, to create unity in how rooms look, as well as it making things clearer.
\par {\pntext\pard\plain\f3\fs18 \loch\af3\dbch\af0\hich\f3 \'b7\tab}Only use one indent per room description, because more will screw up mapper clients. Many people like maps.
\par {\pntext\pard\plain\f3\fs18 \loch\af3\dbch\af0\hich\f3 \'b7\tab}When you use a number, type it out. Example: There are three tables along the walls. Do not use 3.
\par {\pntext\pard\plain\f3\fs18 \loch\af3\dbch\af0\hich\f3 \'b7\tab}Aim for a line length of 60-75 characters.
\par {\pntext\pard\plain\f3\fs18 \loch\af3\dbch\af0\hich\f3 \'b7\tab}Do try to write more than two lines of description.
\par {\pntext\pard\plain\f3\fs18 \loch\af3\dbch\af0\hich\f3 \'b7\tab}Don't be afraid to add zone hints in extra descriptions. Make the players work to get their clues.
\par {\pntext\pard\plain\f3\fs18 \loch\af3\dbch\af0\hich\f3 \'b7\tab}Do not write the description to only fit in one direction, like, "the road continues north, or back south where you came from'. People may be headed the other way.
\par {\pntext\pard\plain\f3\fs18 \loch\af3\dbch\af0\hich\f3 \'b7\tab}Try to avoid using "You"'s. ("You see this, you stand there, you feel afraid"). Rather, make a description that conveys meaning.
\par {\pntext\pard\plain\f3\fs18 \loch\af3\dbch\af0\hich\f3 \'b7\tab}
Don't do things as, "There is a roar from the south!". If they killed the dragon already, how can it be roaring? You can add mob things to rooms only if the mob cannot be killed, and is sure to always be there.
\par {\pntext\pard\plain\f3\fs18 \loch\af3\dbch\af0\hich\f3 \'b7\tab}If other builders do (or did) not respect these rules, that's no reason for you not to. Try to stick to them. Thanks.
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f27\fs18\lang1033\langfe1033\langnp1033 
\par When you're done writing and flagging the room to your satisfaction, be sure to save it!
\par }{\b\f27\fs18\lang1033\langfe1033\langnp1033 RSAVE\tab \tab rsave}{\f27\fs18\lang1033\langfe1033\langnp1033 \tab \tab \tab to save the room you're currently in
\par \tab \tab }{\b\f27\fs18\lang1033\langfe1033\langnp1033 rsave <start> <end>}{\f27\fs18\lang1033\langfe1033\langnp1033 \tab to save a range of rooms, from start to end.
\par 
\par There is a command RLOAD too. Don't use this, it's broken. Crashes stuff, and corrupts whole zone files. Stay away from it. It's the plague.
\par \tab 
\par Ofcourse, a zone would be nothing without some mobiles to prowl it:
\par }{\b\f27\fs18\lang1033\langfe1033\langnp1033 CREATING MOBILES
\par }{\f27\fs18\lang1033\langfe1033\langnp1033 Let me first introduce five commands quick:
\par }{\b\f27\fs18\lang1033\langfe1033\langnp1033 LOAD\tab \tab load m <vnum/name>
\par }{\f27\fs18\lang1033\langfe1033\langnp1033 \tab loads a mobile. You can now edit it.
\par 
\par }{\b\f27\fs18\lang1033\langfe1033\langnp1033 STAT\tab \tab stat <mob name>
\par }{\f27\fs18\lang1033\langfe1033\langnp1033 \tab lets us look at its curent settings
\par 
\par }{\b\f27\fs18\lang1033\langfe1033\langnp1033 MFORCE\tab mforce <mobname> <command>
\par }{\f27\fs18\lang1033\langfe1033\langnp1033 \tab Makes a mob do something.
\par 
\par }{\b\f27\fs18\lang1033\langfe1033\langnp1033 MEDIT\tab \tab medit <name of mob in room>
\par }{\f27\fs18\lang1033\langfe1033\langnp1033 \tab An easy way of editing mobiles.
\par 
\par }{\b\f27\fs18\lang1033\langfe1033\langnp1033 MSAVE\tab \tab msave <name of mob in room> <to vnum>
\par }{\f27\fs18\lang1033\langfe1033\langnp1033 \tab save the mob in the room to a vnum.
\par }{\b\f27\fs18\lang1033\langfe1033\langnp1033 PURGE\tab \tab purge <name of mob|item in room>
\par }{\f27\fs18\lang1033\langfe1033\langnp1033 \tab get rid of a mobile or object in the room. leaves no corpse. If a mobile, its carried and equipped items will be left on the ground.
\par 
\par Now, let me explain how I like to work around the problem mentioned at the start:
\par First, I load a mobile. I edit it real basic, and set its name to empty, it's short description to empty, and it's long description to empty (do this with MEDIT). Basically, it's gonna be an empty mobile.
\par I then proceed to msave this mob to 10 vnums, just to create them.
\par \tab msave empty 1001
\par \tab msave empty 1002
\par \tab msave empty 1003
\par \tab etc.
\par T
hen, I ask someone to reboot the build site, thus making these vnums known to the mud. Now, when I type show m 8 (or whatever zone I'm working on), it shows a listing of 10 empty mobs. Now that they exist, I can load them, edit them, save them, reload the
m, anything I want. And I got 10 mobs to play around with. When I run out of mobs, I repeat this sequence.
\par 
\par Some mobs are not flagged SENTINEL, meaning they'll wander. edit these guys in a room without exits, or MFORCE them to sleep. Saves you the time to go looking for them when you wanna save em.
\par 
\par When creating a mobile, it's easiest to make it out of an exist
ing mobile. However, you should take care not to use one that has a special procedure attached to it. The stat command shows you whether it has one. One I like to use is 'load m template', which gives a standard editable mob.
\par Now that we got the clay, it's time to craft it into something pretty, using MEDIT.
\par 
\par 1) Name\tab \tab \tab \tab sets the keywords to the mobile.
\par 2) Short description\tab \tab sets the short name. like in, You hit "shortname" in his leg.
\par \tab \tab \tab \tab Do not finish with a period! Do not start with a capital unless it's a name (a guard|Laetanore Silverberry).
\par 3) Long description\tab \tab sets the room desc of the mob: "A small man is eyeing your purse."
\par \tab \tab \tab \tab Always finish with a period.
\par 4) Description\tab \tab \tab What the mob looks like when you look at him/her/it.
\par 5) Action flags\tab \tab \tab What kind of stuff this guy does. See below for more info.
\par 6) Affect flags\tab \tab \tab What spells/skills this guy is affected by. Don't use hold, it's silly.
\par 7) Alignment\tab \tab \tab Alignment of mob, -1000 (evil) to +1000 (good).
\par 8) Level\tab \tab \tab \tab Level of mob. This defines its xp value, and some spell damage and other proc stuff.
\par 9) Armor class\tab \tab \tab Armor class of mob. -100 (tough to hit, this one) to +100 (meh, this \tab one must be sleeping naked).
\par 10) Damage size of die\tab \tab How many sides on the damage die.
\par 11) Damage number of die\tab How many times the damage die is rolled.
\par 12) Damage roll plus\tab \tab Damage bonus. ranges from 0 to 127. Don't be daft. Don't exceed 35, it's bad enough for most uglies.
\par 13) Race\tab \tab \tab Number of race. Use 'help allrace' to get a listing. 1 = human.
\par 14) Number of attacks\tab \tab Has to be an integer, no decimals. I may change this somewhere in the future.
\par 15) Exp flags/amount\tab \tab Ranges from 0 (= 0 xps) to 31 (= way too much). I find 15-18 makes decent amount. Try it a bit. Depends on how many +hps you save the mob with too.
\par 16) Default position\tab \tab 
Should it be sitting, standing, lying down to show its Long Description (3)? Bear in mind mobs load in the position you saved them in, not in their default. so if default = sit, and you save it standing, it will not show the long desc when you loa
d it, cuz it's not in his default position. Be smart, save mob in his default postion.
\par 17) Resistances\tab \tab \tab Resistances of the mob.
\par 18) Immunities\tab \tab \tab Immunities. Some comments here: 
\par \tab \tab \tab \tab The availability of paralyze weapons may want you to either make some mobs immune, or resist hold.
\par \tab \tab \tab \tab Mobs with level 51 or higher should ALWAYS be immune to charm.
\par \tab \tab \tab \tab Mobs that are immune to slash, blunt or pierce should also be immune to charm. We've had our share of resurrectable immune mobs.
\par 19) Susceptibilities\tab \tab Thieves like sus:pierce mobs. Think about it.
\par 20) Sounds\tab \tab \tab Dodgy one, this, seldom saves like it should. Better not try sticking sounds to mobs.
\par 21) Distant sounds\tab \tab See above. Talk command is set in this field, start the line with a '.
\par \tab \tab \tab \tab example: 'Hello hello. You wouldn't have seen my marbles, would you?~
\par \tab \tab \tab \tab (enter ~ on same line, start with a '. I don't think this talk saves like it should either. Not when I'm writing this anyway.)
\par 22) Sex\tab \tab \tab \tab Yes please.
\par 23) Hit roll plus\tab \tab \tab Determines if mobs can hit stuff. +24 takes care of hitting heroes. +12 for most newbie mobs. Experiment.
\par 24) Common Procedure\tab \tab Some mobiles will come to life by adding a common proc. It is possible to set such here. See below.
\par 25) Talk response\tab \tab If player types 'talk <mobname>', this is what will show. Enter a ~ on the first line if it won't talk.
\par 26) Quest solved response\tab If the Common Procedire is set to Quest, this is what the mob will say when player gives the item corresponding with the mob's vnum to the mob.
\par 27) Quest wrong response\tab If the Common Procedire is set to Quest, this is what the mob will say when player tries to give a different item to the mob.
\par 28) Max Hitpoints\tab \tab Set mob's hitpoints here. If you need a pointer, go for level*5 hps, and add a bit.
\par 29) Mobile carried money   \tab Set mob's coinage here. Don't go mad.
\par \tab 
\par Action Flags:
\par SPEC\tab \tab \tab Does this mob have a special procedure? Don't bother setting it. the proc itself does it for you. Hands off.
\par SENTINEL\tab \tab Is this a stationary mob? then set it. If it should roam, don't set it.
\par SCAVENGER\tab \tab Should it pick up stuff, loot corpses, wear stuff if it can? Set this.
\par ISNPC\tab \tab \tab It is a monster. Don't ever touch this. If you take it off, you create a player without control. Hands off. (whay are these in here anyway?)
\par NICE-THIEF\tab \tab Won't smack a thief if it tries to steal from him. Not like me.
\par AGGRESSIVE\tab \tab This mobile will agg players if it can see them (add true see and they can). Unless players are sneaky, then it'll leave em in peace as long as they're not fighting.
\par STAY-ZONE\tab \tab Don't go wandering out of your zone, boy!
\par WIMPY\tab \tab \tab Tries to flee if hps < 25%. Adds 20% to xp worth. They're a pain to kill off.
\par ANNOYING\tab \tab Nada.
\par HATEFUL\tab \tab Hits on players that were pestering. It's autoset. no need to touch this.
\par AFRAID\tab \tab \tab Nuthin'.
\par IMMORTAL\tab \tab Can't hit this mob, think color pools in astral.
\par HUNTING\tab \tab Autoset when a player flees, and the mob is AGGRESSIVE. He's gonna come for ya. No idea why it's in this list.
\par DEADLY\tab \tab \tab If this mob casts poison, it's deadly. Instakill. Now why would it cast poison?
\par POLYMORPHED\tab \tab Guh? Useless. Only applies to polied players. Don't touch.
\par META_AGGRESSIVE\tab Ooh, this is the meanie. Like AGGRESSIVE, but it doesn't refrain from walloping sneaky players. Set em both to get a hateful hunter.
\par GUARDING\tab \tab Nada. May make a little summat for this.
\par NECROMANCER\tab \tab Mob acts like a necromancer. Or not, as the case may be, because I haven't written this proc yet.
\par HUGE\tab \tab \tab Can't be bashed or legsweeped by normal sized people. Just psi telekinesis an giant bash/legsweep. Give race variety a chance, use sparingly.
\par SCRIPT\tab \tab \tab Mob executes a script. We don't use this, it's a bit fuzzy.
\par GREET\tab \tab \tab Some mobiles may show greet behaviour, wink, smile, call people lord or lady. The usual arse kissing.
\par MAGIC-USER\tab \tab Mob acts like a mage, casting protective spells, and ugly stuff in battle. Doesn't cast fireshield as of yet.
\par WARRIOR\tab \tab Mob acts like a warrior, doing best weapon checks, bashing, kicking.
\par CLERIC\tab \tab \tab Cleric. Heals itself, goes buhbye when hurt, casts harm/sanc too.
\par THIEF\tab \tab \tab Backstabs players if he has a dagger equipped and is aggy.. Steals coins from players too. They's funky.
\par DRUID\tab \tab \tab Woo, since they've been upgraded, they ugly. Depending on level, they do spellups. <24 minor stuff, <25 some protective spells, <48 summons anisums, else they even flame up. they like tvp too, don't place em indoors for full advantage.

\par MONK\tab \tab \tab Kick, springleap, quiver if you're unlucky. Could use some work.
\par BARBARIAN\tab \tab As of yet, just like a warrior.
\par PALADIN\tab \tab Same here
\par RANGER\tab \tab \tab Spells up a bit, fights like a warrior.
\par PSIONIST\tab \tab Spells up, goes into hide mode. May wanna use sparingly. Also can cast when sitting, don't blame me.
\par BARD\tab \tab \tab Not imped yet.
\par }\pard \ql \li0\ri0\keepn\nowidctlpar\faauto\rin0\lin0\itap0 {\f27\fs18\lang1033\langfe1033\langnp1033 
\par Common Procedures:
\par 0) None\tab \tab \tab This should be obvious.
\par 1) Shopkeeper\tab \tab This guy will sell anything in his inventory. He'll also sets his own flag t
o SENTINEL, and his room's flags to PEACEFUL if they aren't already. If he has the coin, he'll buy stuff too. And sell em back for a healthy profit. Kinda newly added. Report bugs.
\par 2) Guildmaster\tab \tab This dude will train players in the class that he's been se
t to in 3) Action Flags. Only set ONE class action flag, or get odd results (SENTINEL, WARRIOR is okay, WARRIOR, CLERIC, SENTINEL isn't.) He will train players up to his own level.
\par 3) Swallower\tab \tab Woop! Bad bash? Tasty snack, Gulp Gulp!
\par 4) Drainer\tab \tab Hand me those levels boy. if ya can't keep me down, you're not worth your levels.
\par 5) Quest\tab \tab Nice stuff from Banon. If player hands (object with VNUM = this mobile's VNUM) to mobile, mobile will load object with VNUM+1 and hand it to player. If no such thing exists,
 player will receive (mobile's level)*1000 xps, and his align will shift (mobile's align/20). If mobile has align = 0, no align shift will happen.
\par 6) Old Breath Weapon\tab Ancient. The very first DaleMUD dragon's breathed this. Don't underestimate it :)
\par 7) Fire Breather\tab \tab Burn baby burn.
\par 8) Gas Breather\tab \tab Nothing to do with Hitler.
\par 9) Frost Breather\tab \tab Brr. Bring a coat. (Woop, I finally found the bug in here!)
\par 10) Acid Breather\tab Twice as corrosive to items as the other breaths.
\par 11) Electric Breather\tab Always wanted the Ben Franklin experience? Here's your chance.
\par 
\par The following breath weapons courtesy of Ignatius:
\par 12) Dehydration Breather\tab Like Coke and Beer. Stay off it :) Drains you and makes you feel weak. (Gas Breath)
\par 13) Vapor Breather\tab Oh golly, more drain and weakness. (Fire Breath)
\par 14) Sound Breather\tab Paralyze, silence and fear. (Lightning Breath)
\par 15) Shard Breather\tab Oh this one's real scrappy too! Wehee! (Lightning Breath)
\par 16) Sleep Breather\tab Shhhh, don't wake them. (Gas Breath)
\par 17) Light Breather\tab Ouch, the light. Hurts me poor eyes, can't see nothing no more! Can't even see what scrapped there. (Fire Breath)
\par 18) Dark Breather\tab Energy drain, weakness, blindness. Gosh Ignatius is a cruel man. (Gas Breath)
\par 19) Receptionist\tab \tab Lets people rent out in mob's room. Makes mob a SENTINEL, and room PEACEFUL and NO_SUM.
\par Note: Procedure will start working after saving and loading this mobile.
\par 
\par 
\par When you're satisfied with your mob stats, }{\b\f27\fs18\lang1033\langfe1033\langnp1033 MSAVE}{\f27\fs18\lang1033\langfe1033\langnp1033  it to an existing vnum, then load it and check it out. Mainly check for xp value, a
nd hps. Make changes as needed. Is it possible to change a mobile's basic statistics? (CON, WIS, STR, etc) No it is not. Not unless you write a special proc for it. Sorry. May change this in the future. Not likely, since it very seldom makes a difference.

\par 
\par 
\par Now we just want some items. Let's make one. But first, we gotta create some obj VNUMs.
\par }{\b\f27\fs18\lang1033\langfe1033\langnp1033 CREATING OBJECTS
\par }{\f27\fs18\lang1033\langfe1033\langnp1033 Some Basic commands:
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f27\fs18\lang1033\langfe1033\langnp1033 LOAD\tab \tab load o <vnum/name>
\par }{\f27\fs18\lang1033\langfe1033\langnp1033 \tab loads an object. You can now edit it.
\par 
\par }{\b\f27\fs18\lang1033\langfe1033\langnp1033 STAT\tab \tab stat <object name>
\par }{\f27\fs18\lang1033\langfe1033\langnp1033 \tab lets us look at its current stats.
\par 
\par }{\b\f27\fs18\lang1033\langfe1033\langnp1033 OEDIT\tab \tab oedit <name of object in room or inventory>
\par }{\f27\fs18\lang1033\langfe1033\langnp1033 \tab An easy way of editing objects.
\par 
\par }{\b\f27\fs18\lang1033\langfe1033\langnp1033 OSAVE\tab \tab osave <name of object in room or inventory> <to vnum>
\par }\pard \ql \li0\ri0\keepn\nowidctlpar\faauto\rin0\lin0\itap0 {\f27\fs18\lang1033\langfe1033\langnp1033 \tab save the obj to a vnum.
\par 
\par As with the mobs, load a dummy item. Call it empty, empty and empty (through use of the first three options in OEDIT) and save it away ten times:
\par \tab osave objname objnr
\par \tab osave objname objnr+1
\par \tab etc.
\par Ask a 58+ to reboot build site, so the mud will index the new vnums. Now, you can load and save the vnums you created. Don't make many more than you may need. Waste of space.
\par Load up an empty, and start editing it.
\par 
\par 1) Name\tab \tab \tab Keywords for the item
\par 2) Short description\tab Short name, like when worn, inventory, etc. Do not end with a period (or a space, Ash :-)!
\par 3) Description\tab \tab Name of item when on the ground. End with a period.
\par 4) Type\tab \tab \tab Type, has impact on 11, 12. If you change this, check the flags for 11 and 12 too.
\par 5) Wear positions\tab Where to wear. TAKE means that it's pickuppable. Most items should be TAKE.
\par 6) Extra flags\tab \tab Antis on the item, rare flags, magic, bless, etc. MAGIC prevent barbs from picking it up. So does glow, hum, bless. ANTI-SUN scraps when worn in daylight without the protection of a darkness spell.
\par 7) Weight\tab \tab Compare to other items to get a feel. Weapons heavier than 30 cannot be wielded one-handed.
\par 8) Value\tab \tab \tab Sets ego if none is set in 12.
\par 9) Rent cost\tab \tab anything below 10k is free from rent. Odd but true. -1 means unrentable. Make keys -1 rent.
\par 10) Extra affects\tab \tab other stuff that you stick on items. Explore it a bit. Numbers for weaponspells can be found in the 'allspells' list.
\par 11) Object values\tab Type dependant flags. Where does the portal go? How many weight fits in the bag? What are the damdice on the weapon?
\par 12) Object Specials\tab Sets ego, weaponspeed, Max (= the load rate. % of the time the item loads), Tweak (= the chance of an item loading with slightly different stats that usual).
\par 
\par Tweaking:
\par The idea is to make items that are loaded at a zone reset, will not always be 100% identical. Tweak rate is the chance of the item stats not being regular but tweaked.
\par Tweaking is subject to some regulations. For instance, a +2dam ring will never tweak better than +3dam, or worse than 0dam.
\par To keep things simple, only the special affects can tweak, not Armor Class of ITEM_ARMOR or damdice/damage type of a weapon.
\par Don't go overboard on the tweakrate for a 2dam ring. However, putting a high tweak rate on a +0dam, +0 dam, +0dam ring would present some interesting options. The chance of a 'bad' tweak is as good as the chance of a 'good' tweak.
\par Tweaks will only occur when a zone resets. Not when someone, or some proc, loads an item.
\par 
\par Here's a tool to do some custom work on an item (or a person, as the case may be:
\par }{\b\f27\fs18\lang1033\langfe1033\langnp1033 STRING\tab \tab \tab string <type> <name> <field> [<string> | <keyword>]}{\f27\fs18\lang1033\langfe1033\langnp1033  
\par Type is either 'obj' or 'char'.
\par Field is one of the following\tab (the names may be abbreviated):
\par Name\tab \tab \tab \tab (the call-name of an obj/char - kill giant)
\par Short\tab \tab \tab \tab (for inventory lists (objs) and actions (chars))
\par Long\tab \tab \tab \tab (for when obj/character is seen in room)
\par Title\tab \tab \tab \tab (for players)
\par Description\tab \tab \tab (For look at. For objs, must be followed by a keyword)
\par Delete-description\tab \tab (only for objs. Must be followed by keyword)
\par Where a string is expected as the last argument, a new line will make you 
enter a string mode, and the game will prompt you for new lines to the string until you exceed the maximum length for the string or you end a line with a '~'. Try not to make typos in the keywords, because you currently cannot delete extra descriptions on
 items.
\par }{\b\f27\fs18\lang1033\langfe1033\langnp1033 
\par }{\f27\fs18\lang1033\langfe1033\langnp1033 String is most often used for setting extra descriptions to items. For instance, build a wooden sign. It needs text on it, so, }{\b\f27\fs18\lang1033\langfe1033\langnp1033 
STRING o sign description sign wooden thisisjustanotherkeyword}{\f27\fs18\lang1033\langfe1033\langnp1033 . We now get a field in which we can put our sign informati
on. Enter a ~ on the last line, not a new line. Now, if you 'look wooden' or 'l sign' or 'look thisisjustanotherkeyword', the info will be displayed to you.}{\b\f27\fs18\lang1033\langfe1033\langnp1033 
\par 
\par }{\f27\fs18\lang1033\langfe1033\langnp1033 If you set an item with TYPE_AUDIO, you need to use the }{\b\f27\fs18\lang1033\langfe1033\langnp1033 setsound}{\f27\fs18\lang1033\langfe1033\langnp1033  command:
\par }{\b\f27\fs18\lang1033\langfe1033\langnp1033 SETSOUND}{\f27\fs18\lang1033\langfe1033\langnp1033 \tab \tab To set a sound:\tab \tab }{\b\f27\fs18\lang1033\langfe1033\langnp1033 setsound <itemname> <sound string>
\par }{\f27\fs18\lang1033\langfe1033\langnp1033 \tab \tab \tab To remove a sound:\tab }{\b\f27\fs18\lang1033\langfe1033\langnp1033 setsound <itemname>}{\f27\fs18\lang1033\langfe1033\langnp1033 
\par This item will now randomly produce a sound. More stable than sounds on mobs. Don't go overboard on these, cuz sounds on objects tend to get annoying, if there's many of them.
\par 
\par The next two commands can now be set in oedit, option 12 as well.
\par To set a loadrate to an item, use the setobjmax command:
\par }{\b\f27\fs18\lang1033\langfe1033\langnp1033 SETOBJMAX\tab \tab setobjmax <object vnum> <p>
\par }{\f27\fs18\lang1033\langfe1033\langnp1033 The item will now load p% of the time. Something fishy here, read more on this in ZSAVE.
\par To set an weapon's weaponspeed, use the setobjspeed command.
\par }{\b\f27\fs18\lang1033\langfe1033\langnp1033 SETOBJSPEED\tab \tab setobjspeed <obj name> <speed>
\par }{\f27\fs18\lang1033\langfe1033\langnp1033 where speed ranges from 0 (grants no chance of an extra attack to wielder) to 100 (grants a full extra attack to wielder).}{\b\f27\fs18\lang1033\langfe1033\langnp1033 
\par 
\par }{\f27\fs18\lang1033\langfe1033\langnp1033 When you're happy with your ite
m, save it away to an empty VNUM, junk it, and load it. Only if you saved it to an existing (but previously saved as empty) VNUM though, else you're gonna end up with a crash and corrupted item.
\par }{\b\f27\fs18\lang1033\langfe1033\langnp1033 OSAVE\tab \tab osave <obj name> <to_vnum>}{\f27\fs18\lang1033\langfe1033\langnp1033 
\par 
\par Finally, we gotta place our mobs and items in their rooms.
\par Load up your mob in the correct room it should spawn in. Then load up any items it may have to carry/wear, and give them to him. If he should wear them, use MFORCE. Bear in mind that SCAVENGER mobs will try to wear stuff ou
t of their own accord. Also bear in mind that not all races can wear all items in all places. When you're satified with your mob and his items, use zsave:}{\b\f27\fs18\lang1033\langfe1033\langnp1033 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f27\fs18\lang1033\langfe1033\langnp1033 ZSAVE\tab \tab zsave <zone number>
\par }{\f27\fs18\lang1033\langfe1033\langnp1033 This saves all mobiles and items at their current location in the zone. To see if it all went well, use zload:
\par }{\b\f27\fs18\lang1033\langfe1033\langnp1033 ZLOAD\tab zload <zone number>
\par }{\f27\fs18\lang1033\langfe1033\langnp1033 This command clears your zone of all items/monsters, then loads up the monsters and items as you saved them in zsave. If you're happy, proceed with the next mob, or load a chest, drop it in a r
oom, and zsave. If you find you're stuck with a mob you don't want.. PURGE it, pick up any items it may have carried, and zsave. Then zload to see if you're rid of him. Careful not to drop your Staff of Abagor somewhere, then zsave. It would load on the g
round, mortals would go on a mad trip!
\par }\pard \ql \li0\ri0\keepn\nowidctlpar\faauto\rin0\lin0\itap0 {\f27\fs18\lang1033\langfe1033\langnp1033 
\par For laying out the rooms in a zone, there is a spiffy tool called wizset.
\par }{\b\f27\fs18\lang1033\langfe1033\langnp1033 WIZSET\tab \tab wizset <home|fast|map>
\par }{\f27\fs18\lang1033\langfe1033\langnp1033 home\tab sets the room you're currently in to your home room. means you enter the game here. Nice to keep track of where you left off building last week. Make sure to }{\b\f27\fs18\lang1033\langfe1033\langnp1033 
save}{\f27\fs18\lang1033\langfe1033\langnp1033  after.}{\b\f27\fs18\lang1033\langfe1033\langnp1033 
\par }{\f27\fs18\lang1033\langfe1033\langnp1033 fast\tab walk in a direction where there is no current exit and one is created going in that direction, also making areturn exit in the new room to the previous room. It copies the sector type from
 your start room to your new room too.
\par \tab To make a loop, you will need to manually edit exit. This setting does not account for walking into an existing room unless it is from a room you made from the existing room and are walking back into it.
\par \tab If you are in a room and want to make an exit into another already made room, you must make it manually.
\par map\tab A funky new toy by Banon, it works like fast, but sets the new room to ROOM_MAP (a sort of area overview). Also takes along the sector flag from your startroo
m, and it connects round, like, you can move n,e,s,w and end up in the same room, having created a 2x2 square. ROOM_MAPs are not meant for normal zones, but rather for connector zones.
\par 
\par 
\par When you think you're done:
\par You probably aren't. Here's what you do.}{\b\f27\fs18\ul\lang1033\langfe1033\langnp1033 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f27\fs18\lang1033\langfe1033\langnp1033 
Load test characters of appropriate level, and test your zone, with mobs wielding/using any equipment they will be wielding/using.  This should give you an idea how tough your mobs are, and whether you need to boost them up or not.  Special functions for 
m
obs need to be coded in - so make a list of coding needs including item/mob/room numbers and a full description of what is needed.  This will go to one of the coders to complete for you (find out who the coders are and email them!).  Once implemented, tes
t
 the coding as necessary.  When the zone is complete, let one of the 59+ immortals know, or whoever is in charge of testing and ports.  You will probably need to go through the zone completely with a high level immortal who will examine the entire zone fo
r
 spelling errors, grammar, mobile toughness comparative to level for which zone is intended, etc. etc.  Include a list of items, item stats, and mob/room#.  A list of mobs, locations, and their stats will be very helpful as well for testing purposes.  Exp
ect to be criticized on several decisions, yet do not give in too easily. If you got a reason for this or that, explain it. We do listen sometimes :)
\par 
\par Doubtless this file will leave you with questions unanswered. Try to figure it out, or talk to people, ask
 around. Maybe let us know what needs to be in here as well. I just hope it'll help you get started. Finally, I'd like to say that you should do building in your own time. Not everyone builds at the same speed. That doesn't mean you should speed up or slo
w down. Just do it when you feel like it. Have fun :)
\par -Lennya
\par 
\par }\pard \ql \li0\ri0\nowidctlpar\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\faauto\rin0\lin0\itap0 {\f27\fs18\lang1043\langfe1033\langnp1043 
For those of us with server access, here's how you muck with the zone file:
\par cd/home/havok/buildsite/lib\tab \tab \tab \tab (to get to the buildsite directory)
\par cp tinyworld.zon tinyworld.zon-yournamehere-<date)\tab \tab (backup the tinyworld.zon directory)
\par pico tinyworld.zon\tab \tab \tab \tab \tab (to begin editing the zone file)
\par }\pard \ql \fi-5490\li5490\ri0\nowidctlpar\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\faauto\rin0\lin5490\itap0 {\f27\fs18\lang1043\langfe1033\langnp1043 CNTRL-W\tab \tab \tab \tab 
\tab \tab (to search, usually for \'93Last Area\'94 or specific zone name)
\par ** Now you can edit an existing zone, or enter a new one, following the same format
\par CNTRL-X\tab \tab \tab \tab \tab \tab (to exit the editor, \'93Y\'94 to save)
\par }{\f2\fs18\lang1043\langfe1033\langnp1043 
\par }}