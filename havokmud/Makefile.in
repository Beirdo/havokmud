##
## The compiler your gonna use to compile this with..
##
CC=@CC@
##
LD=$(CC)

ROOT = .

## Include dirs
INCDIRS = -I${ROOT} -I${ROOT}/include -I${ROOT}/util @INCLUDES@

##  these are architecture dependent flags
CFLAGS = -g -O6 -Wall -Werror -Wno-trigraphs -Wno-long-long -ansi -pedantic \
	 ${INCDIRS}

##  Libraries
LIBS = @LIBS@ -pthread
LDFLAGS = @LDFLAGS@


SRCS =	act.comm.c act.info.c act.move.c act.obj1.c act.obj2.c act.off.c \
	act.other.c act.social.c act.wizard.c board.c \
	classes.c comm.c constants.c create.c create.mob.c \
	create.obj.c db.c fight.c handler.c hash.c heap.c interpreter.c \
	limits.c magicutils.c mail.c mobact.c modify.c mod.text.c multiclass.c \
	opinion.c paginate.c parser.c reception.c security.c shop.c sound.c \
	spec_assign.c spec_guildmaster.c spec_procs2.c spec_procs3.c \
	spec_procs4.c spec_procs.c spell_parser.c trap.c \
	utility.c weather.c
EXE =	havokmud@EXEEXT@
NEWEXE = havoknew@EXEEXT@

NEWLIBFILES = util/libhavokutils.a threads/libhavokthread.a \
	      corefunc/libhavokcore.a 
#NEWLIBS = -Lutil -Lthreads -Lcorefunc -lhavokcore -lhavokthread -lhavokutils -lhavokthread -lhavokcore 
NEWLIBS = util/*.o threads/*.o corefunc/*.o

OBJS = ${SRCS:.c=.o}
DEPS = ${SRCS:.c=.d}

all : ${EXE}

${EXE} : ${OBJS}
	${LD} -g -o $@ $+ ${LDFLAGS} ${LIBS}

${NEWEXE} make.out : ${NEWLIBFILES} force
	-${LD} -g -o ${NEWEXE} ${LDFLAGS} ${NEWLIBS} ${LIBS} 2> make.out

depend : ${DEPS}

${DEPS} : Makefile

%.d: %.c
	@echo "Making $@ (dependencies for $<)"
	@${CC} -MM ${CFLAGS} $< | sed 's,\($*\)\.o[ :]*,\1.o $@ : ,g'  > $@

util/libhavokutils.a:
	make -C util

threads/libhavokthread.a:
	make -C threads

corefunc/libhavokcore.a:
	make -C corefunc

.PHONY: clean cleanall doxygen doxygen-rsync cleannew force

force:

clean:
	rm -f ${OBJS} ${EXE}

cleanall: clean
	rm -f ${DEPS}

distclean: cleanall
	rm -f config.status config.log Makefile config.h

cleannew:
	rm -f ${NEWEXE} make.out undefs

configure: configure.ac
	autoconf

config.in.h: configure.in
	autoheader

Makefile: Makefile.in ${ROOT}/configure
	@echo Your Makefile is out of date, rerun ${ROOT}/configure
	
doxygen:
	doxygen doxygen/Doxyfile

doxygen-rsync:
	rsync -e ssh -avz doxygen/output/html/ flagon:/var/www/sites/www2.beirdo.ca/doxygen/havokmud/

undefs:	make.out
	echo "Summary" > $@
	grep "undefined reference " $+ | wc -l >> $@
	echo "" >> $@
	echo "Undefined symbols" >> $@
	echo "=================" >> $@
	grep "undefined reference " $+ | \
		sed -e 's/^.*undefined reference to `//' -e "s/'$$//" | \
		sort | uniq >> $@
	echo "" >> $@
	echo "Files with undefined symbols" >> $@
	echo "============================" >> $@
	grep "undefined reference " $+ | \
		sed -e "s@"`pwd`"/@@" -e "s/\:.*//" | sort | uniq -c >> $@
	echo "" >> $@
	echo "All undefined symbols by file" >> $@
	echo "=============================" >> $@
	grep "undefined reference " $+ | \
		sed -e "s@"`pwd`"/@@" | sort  >> $@

-include ${DEPS}

