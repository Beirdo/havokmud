// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/unittest_lite_imports_nonlite.proto

#ifndef PROTOBUF_google_2fprotobuf_2funittest_5flite_5fimports_5fnonlite_2eproto__INCLUDED
#define PROTOBUF_google_2fprotobuf_2funittest_5flite_5fimports_5fnonlite_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2003001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "google/protobuf/unittest.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_unittest {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_google_2fprotobuf_2funittest_5flite_5fimports_5fnonlite_2eproto();
void protobuf_AssignDesc_google_2fprotobuf_2funittest_5flite_5fimports_5fnonlite_2eproto();
void protobuf_ShutdownFile_google_2fprotobuf_2funittest_5flite_5fimports_5fnonlite_2eproto();

class TestLiteImportsNonlite;

// ===================================================================

class TestLiteImportsNonlite : public ::google::protobuf::MessageLite {
 public:
  TestLiteImportsNonlite();
  virtual ~TestLiteImportsNonlite();
  
  TestLiteImportsNonlite(const TestLiteImportsNonlite& from);
  
  inline TestLiteImportsNonlite& operator=(const TestLiteImportsNonlite& from) {
    CopyFrom(from);
    return *this;
  }
  
  static const TestLiteImportsNonlite& default_instance();
  
  void Swap(TestLiteImportsNonlite* other);
  
  // implements Message ----------------------------------------------
  
  TestLiteImportsNonlite* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const TestLiteImportsNonlite& from);
  void MergeFrom(const TestLiteImportsNonlite& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::std::string GetTypeName() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .protobuf_unittest.TestAllTypes message = 1;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 1;
  inline const ::protobuf_unittest::TestAllTypes& message() const;
  inline ::protobuf_unittest::TestAllTypes* mutable_message();
  
  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestLiteImportsNonlite)
 private:
  mutable int _cached_size_;
  
  ::protobuf_unittest::TestAllTypes* message_;
  friend void  protobuf_AddDesc_google_2fprotobuf_2funittest_5flite_5fimports_5fnonlite_2eproto();
  friend void protobuf_AssignDesc_google_2fprotobuf_2funittest_5flite_5fimports_5fnonlite_2eproto();
  friend void protobuf_ShutdownFile_google_2fprotobuf_2funittest_5flite_5fimports_5fnonlite_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static TestLiteImportsNonlite* default_instance_;
};
// ===================================================================


// ===================================================================

// TestLiteImportsNonlite

// optional .protobuf_unittest.TestAllTypes message = 1;
inline bool TestLiteImportsNonlite::has_message() const {
  return _has_bit(0);
}
inline void TestLiteImportsNonlite::clear_message() {
  if (message_ != NULL) message_->::protobuf_unittest::TestAllTypes::Clear();
  _clear_bit(0);
}
inline const ::protobuf_unittest::TestAllTypes& TestLiteImportsNonlite::message() const {
  return message_ != NULL ? *message_ : *default_instance_->message_;
}
inline ::protobuf_unittest::TestAllTypes* TestLiteImportsNonlite::mutable_message() {
  _set_bit(0);
  if (message_ == NULL) message_ = new ::protobuf_unittest::TestAllTypes;
  return message_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf_unittest

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fprotobuf_2funittest_5flite_5fimports_5fnonlite_2eproto__INCLUDED
